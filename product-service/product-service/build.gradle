import java.time.LocalDate

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.cloud.tools.jib' version "${jibPluginVersion}"
}

def envFile = file("docker-credentials.env")
if (envFile.exists()) {
	envFile.eachLine {
		if (it && it.contains('=')) {
			def (key, value) = it.split('=', 2)
			System.setProperty(key.trim(), value.trim())
		}
	}
}

group = 'az.semmed'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

def todayTag = LocalDate.now().toString()

jib {
	from {
		image = "gcr.io/distroless/java21"
	}
	to {
		image = "docker.io/" + System.getProperty("DOCKER_USERNAME") + "/${rootProject.name}"
		tags = ['latest', todayTag]
		auth {
			username = System.getProperty("DOCKER_USERNAME")
			password = System.getProperty("DOCKER_PASSWORD")
		}
	}
	container {
		ports = ["8081"]
		jvmFlags = ["-Xms512m", "-Xmx1024m"]
		mainClass = "az.semmed.product_service.ProductServiceApplication"
		format = "OCI"
	}
	container.creationTime = "USE_CURRENT_TIMESTAMP"
	configurationName = "runtimeClasspath"
}

tasks.named('test') {
	useJUnitPlatform()
}
